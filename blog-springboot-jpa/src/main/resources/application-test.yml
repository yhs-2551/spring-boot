spring:
    datasource:
        url: jdbc:h2:mem:testdb;MODE=MySQL
        username: sa
        password:
        driver-class-name: org.h2.Driver

    jpa:
        hibernate:
            ddl-auto: create-drop
        show-sql: true
        properties:
            hibernate:
                format_sql: true
                dialect: org.hibernate.dialect.H2Dialect

    data:
        redis:
            host: localhost
            port: 6379 #DynamicPropertySource에 의해 덮어씌워질 수 있기 때문에 나중에 확인해보기

    # elasticsearch:
    #     uris: http://localhost:9200
        # ${elasticsearch.uris}

    mail:
        host: smtp.test.com
        port: 587
        username: test@test.com
        password: test-password
        properties:
            mail:
                smtp:
                    auth: true
                    starttls:
                        enable: true
    security:
        oauth2:
            client:
                registration:
                    google:
                        # Later change environment
                        # Registration, ??? ?? provider? ?? ??. ?? ???? ???? provider?? ?? ??
                        client-id: ${GOOGLE_CLIENT_ID}
                        client-secret: ${GOOGLE_CLIENT_SECRET}
                        redirect-uri: ${GOOGLE_REDIRECT_URI}
                        authorization-grant-type: ${GOOGLE_AUTHORIZATION_GRANT_TYPE}
                        scope: ${GOOGLE_SCOPE}
                provider:
                    google:
                        authorization-uri: ${GOOGLE_AUTHORIZATION_URI}

# #Test관련 log4j2-test.xml 따로 설정 필요
# logging:
#     level:
#         root: info # vscode에서 테스트시 DEBUG CONSOLE에서 보기 위함 
#         org.hibernate.SQL: debug # SQL 쿼리 출력
#         org.hibernate.type.descriptor.sql: trace # SQL 쿼리 파라미터 출력
#         org.springframework.transaction: debug # 트랜잭션 로그
#         org.springframework.orm.jpa: debug # JPA 로그
#         com.yhs.blog.springboot.jpa: debug # 애플리케이션 로그

jwt:
    issuer: test_issuer
    secret-key-string: testsecretkeytestsecretkeytestsecretkey12345

aws:
    accessKeyId: test-access-key
    secretKey: test-secret-key
    s3:
        bucketName: test-bucket
        region: ap-northeast-2
