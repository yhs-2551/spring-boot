plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco'
}

group = 'com.yhs'
version = '1.0.0'  // 정식 첫 배포 버전
// version = '0.0.1-SNAPSHOT' // 개발 버전 
// version = '1.0.0-RELEASE'  // 릴리스 버전
// version = '1.0.0-BETA'  // 베타 버전

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17) // 자바 버전 수정하고 싶으면 윈도우 powershell 관리자로 실행 -> choco install temurin17 명령어 입력 
    }
}

repositories {
    mavenCentral()
}

dependencies {

    //	알림 관련 및 aop는 나중에 따로 추가. aop는 spring boot starter web or security에 포함되어 있음.

    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'me.paulschwarz:spring-dotenv:4.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation  'software.amazon.awssdk:s3:2.28.18'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    // implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16', 현재 사용x 

    // querydsl
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
    annotationProcessor(
        'com.querydsl:querydsl-apt:5.1.0:jakarta',
        'jakarta.persistence:jakarta.persistence-api',
        'jakarta.annotation:jakarta.annotation-api'
    )

    // elasticsearch
    // implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'

    // ES 동기화 실패시 재시도 기능을 위한 의존성
    // implementation 'org.springframework.retry:spring-retry:2.0.10'

    // implementation 'org.springframework.kafka:spring-kafka:3.2.4'
    
    // 날짜 포맷 변환을 위한 의존성(Elasticsearch, redis에서 날짜 포맷 변환 필요)
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'org.springframework.boot:spring-boot-starter-actuator:3.4.2'
        implementation 'io.micrometer:micrometer-registry-prometheus:1.14.4'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-batch:3.4.1'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Lombok 의존성 (컴파일 시에만 사용)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // Lombok 의존성 (테스트 시에도 사용)
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    testImplementation 'com.h2database:h2:2.2.224'
    testImplementation 'io.rest-assured:rest-assured:5.5.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-inline:5.2.0' // 정석 메서드 테스트를 위해
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:testcontainers:1.20.4'
    testImplementation "org.testcontainers:elasticsearch:1.20.4"
    testImplementation 'org.testcontainers:junit-jupiter:1.20.4'
    testImplementation 'org.awaitility:awaitility:4.2.2'

     testRuntimeOnly 'org.junit.platform:junit-platform-launcher'



}

// QueryDSL QClass 생성 위치 지정
def querydslDir = "$buildDir/generated/querydsl" 

// QueryDSL QClass 위치 지정
sourceSets {
    main.java.srcDirs += [ querydslDir ]
}

// QueryDSL QClass 생성 설정
tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

// // clean 시에 QClass 삭제
// clean {
//     delete file(querydslDir)
// }

// doLast는 clean 태스크의 모든 작업이 완료된 후 실행되므로 더 안전
// ./gradlew clean시에 동작
clean.doLast {
    file(querydslDir).deleteDir()
}


configurations {
    configureEach {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml {
            required = true
            destination = layout.buildDirectory.file('reports/jacoco/test/jacocoTestReport.xml').get().asFile
        }
        html {
            required = true
            outputLocation = layout.buildDirectory.dir('jacocoHtml')
        }
        csv.required = false
    }
}